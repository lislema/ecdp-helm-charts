{{- $fullName := include "h2o-helm.fullname" . -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "h2o-helm.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    user: {{ .Values.userdata.uuid }}
    alias: {{ .Values.userdata.releaseAlias }}
    sharing: {{ .Values.userdata.sharing }}
    service-catalog.ecdp.eu/metadata.service-type: {{ .Chart.Name | lower }}
  {{- include "h2o-helm.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "h2o-helm.fullname" . }}
  podManagementPolicy: "Parallel"
  replicas: {{ .Values.h2o.nodeCount }}
  selector:
    matchLabels:
  {{- include "h2o-helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        service-catalog.ecdp.eu/metadata.service-type: {{ .Chart.Name | lower }}
      {{- include "h2o-helm.selectorLabels" . | nindent 8 }}
      {{- range $k, $v := .Values.podLabels }}
        {{ $k }}: {{ $v }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "h2o-helm.serviceAccountName" . }}
      securityContext:
      {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.name }}:{{ .Values.image.tag | default (printf "3.%s" .Chart.AppVersion) }}"
          {{- if .Values.image.command }}
          command: {{ .Values.image.command }}
          {{else}}
          command: ["/bin/bash", "-c", "java -XX:+UseContainerSupport -XX:MaxRAMPercentage={{ .Values.h2o.memoryPercentage }} -jar /opt/h2oai/h2o-3/h2o.jar -flow_dir /data/h2oflows"]
          {{end -}}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: h2o-data-storage
              mountPath: /data
              {{ if .Values.storage.efsEnabled }}
              subPath: "{{ .Values.userdata.uuid }}"
              {{ end }}
          securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
          ports:
            - containerPort: 54321
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /kubernetes/isLeaderNode
              port: {{ .Values.h2o.kubernetesApiPort }}
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 1
          resources:
            limits:
              cpu: {{.Values.resources.cpu}}
              memory: {{.Values.resources.memory}}
            requests:
              cpu: {{.Values.resources.cpu}}
              memory: {{.Values.resources.memory}}
          env:
            - name: H2O_KUBERNETES_SERVICE_DNS
              value: {{ include "h2o-helm.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local
            - name: H2O_NODE_LOOKUP_TIMEOUT
              value: '{{ .Values.h2o.lookupTimeout }}'
            - name: H2O_NODE_EXPECTED_COUNT
              value: '{{ .Values.h2o.nodeCount }}'
            - name: H2O_KUBERNETES_API_PORT
              value: '{{ .Values.h2o.kubernetesApiPort }}'
        {{ if .Values.oauth2Proxy.enabled }}
        - name: oauth2-proxy
          image: {{ .Values.oauth2Proxy.container.image.repository }}:{{ .Values.oauth2Proxy.container.image.tag }}
          imagePullPolicy: {{ .Values.oauth2Proxy.container.image.pullPolicy }}
          ports:
            - name: oauth2-proxy
              containerPort: {{ .Values.oauth2Proxy.container.port | default 4180 }}
              protocol: TCP
          args: {{- if not .Values.oauth2Proxy.container.args }} []
            {{- else if .Values.oauth2Proxy.container.args }}
            {{- toYaml .Values.oauth2Proxy.container.args | nindent 12 }}
            {{- end}}
          env:
            {{- if .Values.oauth2Proxy.container.env }}
            {{- toYaml .Values.oauth2Proxy.container.env | nindent 12 }}
            {{- end}}
            - name: OAUTH2_PROXY_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "h2o-helm.fullname" . }}-oidc-client
                  key: clientID
            - name: OAUTH2_PROXY_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "h2o-helm.fullname" . }}-oidc-client
                  key: clientSecret
            - name: OAUTH2_PROXY_COOKIE_NAME
              value: {{ .Values.oauth2Proxy.config.cookieName | default (include "h2o-helm.fullname" .) }}-oauth2-proxy
            - name: OAUTH2_PROXY_COOKIE_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "h2o-helm.fullname" . }}-oauth2-proxy
                  key: cookie-secret
            - name: OAUTH2_PROXY_COOKIE_EXPIRE
              value: {{ .Values.oauth2Proxy.config.cookieExpire | default "168h0m0s" | quote }}
            - name: OAUTH2_PROXY_COOKIE_SECURE
              value: {{ .Values.oauth2Proxy.config.cookieSecure | default "true" | quote }}
            - name: OAUTH2_PROXY_REVERSE_PROXY
              value: {{ .Values.oauth2Proxy.config.reverseProxy | default "true" | quote }}
            - name: OAUTH2_PROXY_HTTP_ADDRESS
              value: {{ (.Values.oauth2Proxy.config.httpAddress | default (printf ":%d" (int .Values.oauth2Proxy.container.port)) ) | quote }}
            - name: OAUTH2_PROXY_UPSTREAMS
              value: {{ .Values.oauth2Proxy.config.upstream | default (printf "http://127.0.0.1:%d" (int .Values.service.targetPort)) | quote }}
            - name: OAUTH2_PROXY_PROVIDER
              value: {{ .Values.oauth2Proxy.config.provider | default "keycloak-oidc" | quote }}
            - name: OAUTH2_PROXY_OIDC_ISSUER_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "h2o-helm.fullname" . }}-oidc-client
                  key: oidcIssuerUrl
            - name: OAUTH2_PROXY_REDIRECT_URL
              value: {{ .Values.oauth2Proxy.config.redirectUrl | default (printf "https://%s.%s/oauth2/callback" .Release.Name (index .Values.ingress.hosts 0).host) | quote }}
            - name: OAUTH2_PROXY_CODE_CHALLENGE_METHOD
              value: {{ .Values.oauth2Proxy.config.codeChallengeMethod | default "S256" | quote }}
            - name: OAUTH2_PROXY_SKIP_PROVIDER_BUTTON
              value: {{ .Values.oauth2Proxy.config.skipProviderButton | default "true" | quote }}
            - name: OAUTH2_PROXY_EMAIL_DOMAINS
              value: {{ .Values.oauth2Proxy.config.emailDomain | default "*" | quote }}
            - name: OAUTH2_PROXY_INSECURE_OIDC_ALLOW_UNVERIFIED_EMAIL
              value: {{ .Values.oauth2Proxy.config.insecureOidcAllowUnverifiedEmail | default "true" | quote }}
            - name: OAUTH2_PROXY_ALLOWED_ROLES
              valueFrom:
                secretKeyRef:
                  name: {{ include "h2o-helm.fullname" . }}-oidc-client
                  key: allowedRoles
            - name: OAUTH2_PROXY_ALLOWED_GROUPS
              valueFrom:
                secretKeyRef:
                  name: {{ include "h2o-helm.fullname" . }}-oidc-client
                  key: allowedGroups
          resources:
            limits:
              cpu: {{ .Values.oauth2Proxy.container.resources.requests.cpu }}
              memory: {{ .Values.oauth2Proxy.container.resources.requests.memory }}
            requests:
              cpu: {{ .Values.oauth2Proxy.container.resources.requests.cpu }}
              memory: {{ .Values.oauth2Proxy.container.resources.requests.memory }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: h2o-data-storage
          persistentVolumeClaim:
            {{- if .Values.storage.efsEnabled }}
            claimName: {{ .Values.storage.efsPVClaimName }}
            {{- else if and .Values.persistentVolume.enabled (.Values.persistentVolume.existingClaim) }}
            claimName: {{ .Values.persistentVolume.existingClaim }}
            {{- else if and .Values.persistentVolume.enabled (not .Values.persistentVolume.existingClaim) }}
            claimName: {{ $fullName }}
            {{- end }}
