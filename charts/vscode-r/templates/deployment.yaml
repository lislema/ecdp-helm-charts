{{- $fullName := include "library-chart.fullname" . -}}
{{- $volumeName := printf "%s-%s" $fullName "data" | trunc 63 | trimSuffix "-" -}}
{{- $initContainerName := printf "%s-%s" $fullName "init-data" | trunc 63 | trimSuffix "-" -}}
{{- $releaseName := .Release.Name -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "library-chart.fullname" . }}
  labels:
    {{- include "library-chart.labels" . | nindent 4 }}
    user: {{ .Values.userdata.uuid }}
    alias: {{ .Values.userdata.releaseAlias }}
    sharing: {{ .Values.userdata.sharing }}
    app.kubernetes.io/instance: {{ $releaseName }}   
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "library-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "library-chart.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
      - name: vscode-fs
        persistentVolumeClaim:
          claimName: {{ .Values.storage.efsPVClaimName }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "library-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if .Values.service.image.custom.enabled }}
          image: "{{ .Values.service.image.custom.version }}"
          {{- else }}
          image: "{{ .Values.service.image.version }}"
          {{- end }} 
          command: ["/bin/sh","-c"]
          # args: ["/data/{{ .Values.init.filename}} /usr/bin/code-server --host 0.0.0.0 /home/coder/efs-storage"]
          args: ["/usr/bin/code-server --host 0.0.0.0 /home/coder/"]
          imagePullPolicy: {{ .Values.service.image.pullPolicy }}
          env:
            - name: SHELL
              value: /bin/zsh
            {{- if .Values.init.personalInit }}
            - name: PERSONAL_INIT_SCRIPT
              value: {{ .Values.init.personalInit }}
            {{- end }}
            {{- if .Values.init.personalInitArgs }}
            - name: PERSONAL_INIT_ARGS
              value: {{ .Values.init.personalInitArgs }}
            {{- end }}
            - name: PASSWORD
              value: {{ .Values.security.password }}  
            - name: PROJECT_USER
              value: {{ .Values.environment.user }}
            - name: PROJECT_GROUP
              value: {{ .Values.environment.group }}
            - name: ROOT_PROJECT_DIRECTORY
              value: /home/{{ .Values.environment.user }}/     
          envFrom: 
            {{- if .Values.s3.enabled }}
            - configMapRef:
                name: {{ include "library-chart.configMapNameS3" . }}
            {{- end }}
            {{- if .Values.vault.enabled }}
            - configMapRef:
                name: {{ include "library-chart.configMapNameVault" . }}
            {{- end }}
            {{- if .Values.git.enabled }}
            - configMapRef:
                name: {{ include "library-chart.configMapNameGit" . }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.networking.vscode.containerPort | default 8080 }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            # {{- toYaml .Values.resources | nindent 12 }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
          volumeMounts:
            # - mountPath: /data
            #   name: {{$volumeName}}
            #   subPath: "{{ .Values.userdata.uuid }}"
            - mountPath: /home/coder/efs-storage
              name: vscode-fs
              subPath: "{{ .Values.userdata.uuid }}"
        {{ if .Values.oauth2Proxy.enabled }}
        - name: oauth2-proxy
          image: {{ .Values.oauth2Proxy.container.image.repository }}:{{ .Values.oauth2Proxy.container.image.tag }}
          imagePullPolicy: {{ .Values.oauth2Proxy.container.image.pullPolicy }}
          ports:
            - name: oauth2-proxy
              containerPort: {{ .Values.oauth2Proxy.container.port | default 4180 }}
              protocol: TCP
          args: {{- if not .Values.oauth2Proxy.container.args }} []
            {{- else if .Values.oauth2Proxy.container.args }}
            {{- toYaml .Values.oauth2Proxy.container.args | nindent 12 }}
            {{- end}}
          env:
            {{- if .Values.oauth2Proxy.container.env }}
            {{- toYaml .Values.oauth2Proxy.container.env | nindent 12 }}
            {{- end}}
            - name: OAUTH2_PROXY_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "library-chart.fullname" . }}-oidc-client
                  key: clientID
            - name: OAUTH2_PROXY_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "library-chart.fullname" . }}-oidc-client
                  key: clientSecret
            - name: OAUTH2_PROXY_COOKIE_NAME
              value: {{ .Values.oauth2Proxy.config.cookieName | default (include "library-chart.fullname" .) }}-oauth2-proxy
            - name: OAUTH2_PROXY_COOKIE_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "library-chart.fullname" . }}-oauth2-proxy
                  key: cookie-secret
            - name: OAUTH2_PROXY_COOKIE_EXPIRE
              value: {{ .Values.oauth2Proxy.config.cookieExpire | default "168h0m0s" | quote }}
            - name: OAUTH2_PROXY_COOKIE_SECURE
              value: {{ .Values.oauth2Proxy.config.cookieSecure | default "true" | quote }}
            - name: OAUTH2_PROXY_REVERSE_PROXY
              value: {{ .Values.oauth2Proxy.config.reverseProxy | default "true" | quote }}
            - name: OAUTH2_PROXY_HTTP_ADDRESS
              value: {{ (.Values.oauth2Proxy.config.httpAddress | default (printf ":%d" (int .Values.oauth2Proxy.container.port)) ) | quote }}
            - name: OAUTH2_PROXY_UPSTREAMS
              value: {{ .Values.oauth2Proxy.config.upstream | default (printf "http://127.0.0.1:%d" (int .Values.networking.vscode.containerPort )) | quote }}
            - name: OAUTH2_PROXY_PROVIDER
              value: {{ .Values.oauth2Proxy.config.provider | default "keycloak-oidc" | quote }}
            - name: OAUTH2_PROXY_OIDC_ISSUER_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "library-chart.fullname" . }}-oidc-client
                  key: oidcIssuerUrl
            - name: OAUTH2_PROXY_REDIRECT_URL
              value: {{ .Values.oauth2Proxy.config.redirectUrl | default (printf "https://%s.%s/oauth2/callback" .Release.Name (index .Values.ingress.hosts 0).host) | quote }}
            - name: OAUTH2_PROXY_CODE_CHALLENGE_METHOD
              value: {{ .Values.oauth2Proxy.config.codeChallengeMethod | default "S256" | quote }}
            - name: OAUTH2_PROXY_SKIP_PROVIDER_BUTTON
              value: {{ .Values.oauth2Proxy.config.skipProviderButton | default "true" | quote }}
            - name: OAUTH2_PROXY_EMAIL_DOMAINS
              value: {{ .Values.oauth2Proxy.config.emailDomain | default "*" | quote }}
            - name: OAUTH2_PROXY_INSECURE_OIDC_ALLOW_UNVERIFIED_EMAIL
              value: {{ .Values.oauth2Proxy.config.insecureOidcAllowUnverifiedEmail | default "true" | quote }}
            - name: OAUTH2_PROXY_ALLOWED_ROLES
              valueFrom:
                secretKeyRef:
                  name: {{ include "library-chart.fullname" . }}-oidc-client
                  key: allowedRoles
            - name: OAUTH2_PROXY_ALLOWED_GROUPS
              valueFrom:
                secretKeyRef:
                  name: {{ include "library-chart.fullname" . }}-oidc-client
                  key: allowedGroups
          resources:
            limits:
              cpu: {{ .Values.oauth2Proxy.container.resources.requests.cpu }}
              memory: {{ .Values.oauth2Proxy.container.resources.requests.memory }}
            requests:
              cpu: {{ .Values.oauth2Proxy.container.resources.requests.cpu }}
              memory: {{ .Values.oauth2Proxy.container.resources.requests.memory }}
        {{- end }}
      # initContainers:
      #   - name: standard-init
      #     image: "busybox"
      #     imagePullPolicy: "IfNotPresent"
      #     command: ["/bin/sh","-c"]
      #     args: ["wget -O /data/{{ .Values.init.filename}} {{ .Values.init.standardInit}} && chmod +x /data/{{ .Values.init.filename}}"]
      #     volumeMounts:
      #     - mountPath: /data
      #       name: {{$volumeName}}          
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}