apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-{{ .Values.image.name }}"
  labels:
    app: "{{ .Release.Name }}-{{ .Values.image.name }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    user: {{ .Values.userdata.uuid }}
    alias: {{ .Values.userdata.releaseAlias }}
    sharing: {{ .Values.userdata.sharing }}
    service-catalog.ecdp.eu/metadata.service-type: {{ .Chart.Name | lower }}
{{ include "doccano.labels" . | indent 4 }}
spec:
  strategy:
    type: Recreate
  replicas: {{ .Values.image.replicaCount }}
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-{{ .Values.image.name }}"
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-{{ .Values.image.name }}"
        release: {{ .Release.Name }}
        service-catalog.ecdp.eu/metadata.service-type: {{ .Chart.Name | lower }}
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
    spec:
      securityContext:
        {{- if .Values.podSecurityContext }}
          {{- toYaml .Values.podSecurityContext | nindent 8 }}
        {{- end }}
      containers:
      - args:
        - /bin/bash
        - /config/bootstrap.sh
        env:
        - name: ADMIN_EMAIL
          value: {{ .Values.env.ADMIN_EMAIL }}
        - name: ADMIN_USERNAME
          value: {{ .Values.env.ADMIN_USERNAME }}
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: ADMIN_PASSWORD
              name: {{ .Release.Name }}-doccano-password
              optional: false
        - name: DATABASE_URL
          value: "postgres://{{ .Values.postgresql.global.postgresql.auth.username }}:{{ .Values.postgresql.global.postgresql.auth.password }}@{{ include "doccano.postgres_host" . }}:5432/{{ .Values.postgresql.global.postgresql.auth.database }}?sslmode=disable"
        {{- if .Values.extraEnv }}
        {{- with .Values.extraEnv }}
{{ toYaml . | indent 8 }}
        {{- end }}
        {{- end }}
        name: {{ .Values.image.name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        {{- if .Values.containerSecurityContext }}
        securityContext: {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.targetPort }}
          name: {{ .Values.service.targetPort }}{{ .Values.service.protocol | lower }}
          protocol: {{ .Values.service.protocol }}
        volumeMounts:
        - mountPath: {{ .Values.persistence.mountPath }}
          name: {{ .Values.persistence.volumeName }}
        - mountPath: /config
          name: bootstrap
        resources:
          requests:
            cpu: {{.Values.resources.requests.cpu}}
            memory: {{.Values.resources.requests.memory}}
          limits:
            cpu: {{.Values.resources.requests.cpu}}
            memory: {{.Values.resources.requests.memory}}
      {{ if .Values.oauth2Proxy.enabled }}
      - name: oauth2-proxy
        image: {{ .Values.oauth2Proxy.container.image.repository }}:{{ .Values.oauth2Proxy.container.image.tag }}
        imagePullPolicy: {{ .Values.oauth2Proxy.container.image.pullPolicy }}
        ports:
          - name: oauth2-proxy
            containerPort: {{ .Values.oauth2Proxy.container.port | default 4180 }}
            protocol: TCP
        args: {{- if not .Values.oauth2Proxy.container.args }} []
          {{- else if .Values.oauth2Proxy.container.args }}
          {{- toYaml .Values.oauth2Proxy.container.args | nindent 12 }}
          {{- end}}
        env:
          {{- if .Values.oauth2Proxy.container.env }}
          {{- toYaml .Values.oauth2Proxy.container.env | nindent 12 }}
          {{- end}}
          - name: OAUTH2_PROXY_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-oidc-client
                key: clientID
          - name: OAUTH2_PROXY_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-oidc-client
                key: clientSecret
          - name: OAUTH2_PROXY_COOKIE_NAME
            value: {{ .Values.oauth2Proxy.config.cookieName | default (.Release.Name) }}-oauth2-proxy
          - name: OAUTH2_PROXY_COOKIE_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-oauth2-proxy
                key: cookie-secret
          - name: OAUTH2_PROXY_COOKIE_EXPIRE
            value: {{ .Values.oauth2Proxy.config.cookieExpire | default "168h0m0s" | quote }}
          - name: OAUTH2_PROXY_COOKIE_SECURE
            value: {{ .Values.oauth2Proxy.config.cookieSecure | default "true" | quote }}
          - name: OAUTH2_PROXY_REVERSE_PROXY
            value: {{ .Values.oauth2Proxy.config.reverseProxy | default "true" | quote }}
          - name: OAUTH2_PROXY_HTTP_ADDRESS
            value: {{ (.Values.oauth2Proxy.config.httpAddress | default (printf ":%d" (int .Values.oauth2Proxy.container.port)) ) | quote }}
          - name: OAUTH2_PROXY_UPSTREAMS
            value: {{ .Values.oauth2Proxy.config.upstream | default (printf "http://127.0.0.1:%d" (int .Values.service.targetPort )) | quote }}
          - name: OAUTH2_PROXY_PROVIDER
            value: {{ .Values.oauth2Proxy.config.provider | default "keycloak-oidc" | quote }}
          - name: OAUTH2_PROXY_OIDC_ISSUER_URL
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-oidc-client
                key: oidcIssuerUrl
          - name: OAUTH2_PROXY_REDIRECT_URL
            value: {{ .Values.oauth2Proxy.config.redirectUrl | default (printf "https://%s.%s/oauth2/callback" .Release.Name (index .Values.ingress.hosts 0).host) | quote }}
          - name: OAUTH2_PROXY_CODE_CHALLENGE_METHOD
            value: {{ .Values.oauth2Proxy.config.codeChallengeMethod | default "S256" | quote }}
          - name: OAUTH2_PROXY_SKIP_PROVIDER_BUTTON
            value: {{ .Values.oauth2Proxy.config.skipProviderButton | default "true" | quote }}
          - name: OAUTH2_PROXY_EMAIL_DOMAINS
            value: {{ .Values.oauth2Proxy.config.emailDomain | default "*" | quote }}
          - name: OAUTH2_PROXY_INSECURE_OIDC_ALLOW_UNVERIFIED_EMAIL
            value: {{ .Values.oauth2Proxy.config.insecureOidcAllowUnverifiedEmail | default "true" | quote }}
          - name: OAUTH2_PROXY_ALLOWED_ROLES
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-oidc-client
                key: allowedRoles
          - name: OAUTH2_PROXY_ALLOWED_GROUPS
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-oidc-client
                key: allowedGroups
        resources:
          limits:
            cpu: {{ .Values.oauth2Proxy.container.resources.requests.cpu }}
            memory: {{ .Values.oauth2Proxy.container.resources.requests.memory }}
          requests:
            cpu: {{ .Values.oauth2Proxy.container.resources.requests.cpu }}
            memory: {{ .Values.oauth2Proxy.container.resources.requests.memory }}
      {{- end }}
      initContainers:
      - args:
        - chown
        - "1000:1000"
        - {{ .Values.persistence.mountPath }}
        image: busybox
        imagePullPolicy: IfNotPresent
        name: chmod
        volumeMounts:
        - mountPath: {{ .Values.persistence.mountPath }}
          name: {{ .Values.persistence.volumeName }}
      volumes:
      - configMap:
          defaultMode: 0777
          items:
          - key: bootstrap.sh
            path: ./bootstrap.sh
          name: {{ .Release.Name }}-conf
          optional: false
        name: bootstrap
      - name: {{ .Values.persistence.volumeName }}
        persistentVolumeClaim:
          claimName: "{{ .Release.Name }}-{{ .Values.persistence.volumeName }}"
      serviceAccountName: {{ include "doccano.serviceAccountName" . }}
      {{- if .Values.image.deployRegistry }}
      imagePullSecrets:
      - name: "{{ .Release.Name }}-{{ .Values.image.name }}-{{ .Values.image.imagePullSecrets }}"
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
